# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WGmNMyGGzYOVaHsBtW7FpzibII0ZD5A2
"""

import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image

# Load the model
@st.cache_resource
def load_model():
    model = tf.keras.models.load_model("model_weights/vgg19_model.h5")
    return model

model = load_model()

# Define your class labels
class_names = ['Class A', 'Class B']  # Replace with your actual class names

# Streamlit UI
st.title("VGG19 Image Classifier")
st.write("Upload an image and the model will predict its class.")

uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Uploaded Image", use_column_width=True)

    # Preprocess the image
    img = image.resize((224, 224))
    img_array = np.expand_dims(np.array(img) / 255.0, axis=0)

    # Make prediction
    prediction = model.predict(img_array)[0]
    predicted_class = class_names[np.argmax(prediction)]
    confidence = float(np.max(prediction))

    st.markdown(f"### ðŸ§  Prediction: `{predicted_class}`")
    st.markdown(f"**Confidence:** `{confidence:.2f}`")